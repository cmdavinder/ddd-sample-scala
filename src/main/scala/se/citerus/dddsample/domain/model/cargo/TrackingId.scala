package se.citerus.dddsample.domain.model.cargo

import se.citerus.dddsample.domain.shared.ValueObject

/**
 * Uniquely identifies a particular cargo. Automatically generated by the application.
 *
 */
final class TrackingId(val id: String) extends ValueObject[TrackingId] {

  /**
   * @return String representation of this tracking id.
   */
  def idString = id

  override def equals(other: Any): Boolean = other match {
    case other: TrackingId => other.getClass == getClass && sameValueAs(other)
    case _ => false
  }

  override def sameValueAs(other: TrackingId): Boolean = {
    other != null && this.id.equals(other.id)
  }

  override def hashCode(): Int = id.hashCode()

  override def toString() = id
}